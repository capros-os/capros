#ifndef __SERIAL_MAP_
#define __SERIAL_MAP_
/*
 * Copyright (C) 2007, 2008, Strawberry Development Group.
 *
 * This file is part of the CapROS Operating System runtime library.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, 59 Temple Place - Suite 330 Boston, MA 02111-1307, USA.
 */
/* This material is based upon work supported by the US Defense Advanced
Research Projects Agency under Contract No. W31P4Q-07-C-0070.
Approved for public release, distribution unlimited. */

#include <eros/arch/arm/mach-ep93xx/ep9315-syscon.h>
#include <linuxk/lsync.h>
#include <eros/Reserve.h>
#include <asm/thread_info.h>
#include <drivers/driver.map>

/*********************************************
 * Serial port driver.
 *********************************************/

serial_prog = program segtree LIBDIR "drivers/serial";
serial_pc = symbol LIBDIR "drivers/serial" driver_start;

BOOT_DOMCRE(serial);	// maybe each should have his own?

/* Define target-specific resources. */

#if defined(EROS_TARGET_arm)

#define APB_PA 0x80800000
#include <devclock.map>
/* UARTCLK is set to the low frequency, which give a max baud rate
   of only 230 Kbps, but saves power. */
/* UARTCLK has no enable/disable. Each individual UART has an enable
   in the device configuration register. */
DEVCLOCK(uart, 7372800, 0, 0);

serial_le_clocks = new node;
serial_le_clocks[0] = number("UARTCLK");
serial_le_clocks[1] = uart_devclock;

// Usage: SERIAL_DRIVER_AMBA(uart3, UART3_BASE, SYSCONDeviceCfg_U3EN)

#define SERIAL_DRIVER_AMBA(name, devcfgbit, devRegsPhysAddr) \
SERIAL_DRIVER_GENERIC(name, devcfgbit) \
name##serialle_iomem = new node; \
name##serialle_iomem[0] = number(1 /* one page */, devRegsPhysAddr, 0); \
name##serialle_iomem[1] = physpage(devRegsPhysAddr); \
name##serialle[LE_CLOCKS] = serial_le_clocks as ro node key; \
name##serialle[LE_IOMEM] = name##serialle_iomem;

#elif defined(EROS_TARGET_i486)

#define SERIAL_DRIVER_8250_PORT(name, baud_base, port, irq, flags) \
SERIAL_DRIVER_GENERIC(name, 0) \
name##serial_proc key reg KR_APP2(0) = number(baud_base, port + (irq * 65536), flags);

#else
#error "Unknown target"
#endif

#define SERIAL_DRIVER_GENERIC(name, devcfgbit) \
DRIVER(name##serial, serial_prog, serial_pc, devcfgbit) \
name##serial_proc key reg KR_CREATOR = serial_proccre;

#endif
