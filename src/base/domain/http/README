Information current as of February 7, 2009

Building http

There are two ways of building the http server, one as a CapROS domain,
and one as a Unix "main" program for self test. If the SELF_TEST switch
is included in the compile command, it will build in self test mode and
be runnable under unix (and gdb, recommended).

Before building the CapROS domain, it is necessary to build the openssl
directory for the target machine. See README.CAPROS in the openssl
directory for instructions.

It should be possible integrate the building of the openssl directory
into the normal CapROS build, but I'm (Bill Frantz) not enough of a make
hacker to pull it off. The http server needs two libraries from openssl,
libssl.a and libcrypto.a. If they are moved to an appropriate link library
directory, and the http makefile adjusted accordingly, building http
will look a lot more like building the rest of the system.

In addition, the SHORT_READ switch will limit network read lengths to 1,
which allows testing for packet boundry bugs. This switch is effective
in both self test and CapROS modes.

There is a shell script, ./testbuild, which will build the test mode
version when run in the domain/http directory. In its released form,
it has the SHORT_READ2 switch set, which does nothing, but is easy to
change to SHORT_READ should that be wanted.


The command:

curl -kT test https://localhost:5001/notafile?4321

Will upload the local file "test" to the CapROS https serve where it will
be stored in the directory as 4321.


The command:

curl -k -o local https://localhost:5001/notafile?1234

Will fetch the CapROS file 1234 and place it in "local".

Note that the -k switch disables curl's check of the server's certificate
against the available certificate authorities. A future investigation is
how to build a CA certificate authorizing the server certificate we build
and getting curl to use is.

Files may also be downloaded using a https uri in Firefox:

https://localhost:5001/fubar?1234

Will fetch the CapROS file 1234 and offer to store it locally under the
name fubar.
