package capros;

/** 
@brief RTC - Real Time Clock
*/
interface RTC extends key raises (key.RequestError) {

  /** The GMT time in seconds since 1/1/1970. */
  typedef unsigned long time_t;

  /** Get the current time. */
  time_t getTime();

  /** Sleep until a specified time or a restart occurs.
  If a system restart occurs (and the caller is persistent),
  the operation raises key.Restart at that time.
  */
  void sleepTillTimeOrRestart(time_t wakeupTime);

  /** Sleep until a specified time. */
  client void sleepTillTime(time_t wakeupTime);

  /** Get the time of the checkpoint from which the system was restarted,
  and the time of the restart. */
  void getRestartTimes(out time_t checkpointTime, out time_t restartTime);
};

interface RTCSet extends RTC {
  /** If the specified time can't be represented in the hardware,
  we raise key.RequestError. */
  void setTime(RTC.time_t newTime);
};
