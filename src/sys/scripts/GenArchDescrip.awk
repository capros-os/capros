#
# Copyright (C) 1998, 1999, Jonathan S. Shapiro.
#
# This file is part of the EROS Operating System.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2,
# or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#

# program to generate ArchDescrip stuff for EROSIMG library.
# Note that this version handles only one architecture, which
# is something we really should fix someday.

BEGIN {
  ndescrip = 0;
  nlayout = 0;

  type_sizes["uint8_t"]  = 1;
  type_sizes["uint16_t"] = 2;
  type_sizes["uint32_t"] = 4;
  type_sizes["uint64_t"] = 8;
  type_sizes["uint80_t"] = 10;
  type_sizes["uint128_t"] = 16;
  type_sizes["KEY"] = 16;
  type_sizes["KEYREGS"] = 32*16;
  type_sizes["KEYRING"] = 8;
  type_sizes["SLEEPQ"] = 8;
  type_sizes["alias"] = 0;
}

/^arch/	{
  arch = $2;
};

/^fix/ {
  svtype[$4] = $3;
  size[$4] = type_sizes[$3];
  class[$4] = "fix";
}

/^pfix/ {
  svtype[$4] = $3;
  size[$4] = type_sizes[$3];
  class[$4] = "pfix";
}

/^tfix/ {
  svtype[$4] = $3;
  size[$4] = type_sizes[$3];
  class[$4] = "tfix";
}

/^gen/ {
  svtype[$4] = $3;
  size[$4] = type_sizes[$3];
  class[$4] = "gen";
}

/^fpu/ {
  svtype[$4] = $3;
  size[$4] = type_sizes[$3];
  class[$4] = "fpu";
}

/^load/ {
  annex = $4;
  if (annex == "root")
    annex = 0;
  
  sz = size[$2];

  descrip[ndescrip] = sprintf("{ ARCH(%s), %s(%s), %d, %s }",
			      arch, $3, $2, sz, $7);
  ndescrip++;

  # the zero is vestigial, and is supposed to be for the value offset.
  layout[nlayout] = sprintf("{ ARCH(%s), REG(%s), %d, %d, %d, 0, %d }",
			    arch, $2, annex, $5, $6, sz);
  nlayout++;
}

END	{
  printf("/* This file is automatically generated and is hereby\n");
  printf("   placed in the public domain */\n\n");

  printf("static RegDescrip Registers[] = {\n");
  
  for (i = 0; i < ndescrip; i++) {
    printf("  %s%s\n", descrip[i], (i < (ndescrip - 1)) ? "," : "");
  }
  printf("};\n");

  printf("static RegLayout Layout[] = {\n");
  
  for (i = 0; i < nlayout; i++) {
    printf("  %s%s\n", layout[i], (i < (nlayout - 1)) ? "," : "");
  }
  printf("};\n");
}

