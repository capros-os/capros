#
# Copyright (C) 1998, 1999, Jonathan S. Shapiro.
# Copyright 2009, Strawberry Development Group
#
# This file is part of the CapROS Operating System,
# and is derived from the EROS Operating System.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2,
# or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# program to generate procoffsets.h from LAYOUT file.  This exists because
# I eventually got sick and tired of miscomputing the offsets by hand.

BEGIN {
  nmask = 0;
  ndef = 0;
  cur_offset = 0;

  fixregs_offset = 0;
  
  type_sizes["uint8_t"]  = 1;
  type_sizes["uint16_t"] = 2;
  type_sizes["uint32_t"] = 4;
  type_sizes["uint64_t"] = 8;
  type_sizes["uint80_t"] = 10;
  type_sizes["uint128_t"] = 16;
  type_sizes["KEY"] = 16;
  type_sizes["KEYREGS"] = 32*16;
  type_sizes["KEYRING"] = 8;
  type_sizes["SLEEPQ"] = 8;
  type_sizes["alias"] = 0;

  type_align["uint8_t"]  = 1;
  type_align["uint16_t"] = 2;
  type_align["uint32_t"] = 4;
  type_align["uint64_t"] = 4;
  type_align["uint80_t"] = 4;
  type_align["uint128_t"] = 4;
  type_align["KEY"] = 4;
  type_align["KEYREGS"] = 4;
  type_align["KEYRING"] = 4;
  type_align["SLEEPQ"] = 4;
  type_align["alias"] = 4;
}

/^opaque/ {
  /* compute the correct offset alignment */
  cur_offset += (type_align[$2] - 1);
  cur_offset -= (cur_offset % type_align[$2]);
  
  cur_offset += type_sizes[$2];
}

/^base/ {
  bases[$2] = cur_offset;
}

/^(alias|fix|pfix|tfix|misc|gen|proc)/	{
  /* compute the correct offset alignment */
  cur_offset += (type_align[$2] - 1);
  cur_offset -= (cur_offset % type_align[$2]);

  for (b in bases) {
    offset = cur_offset - bases[b];
    defs[ndef] = sprintf("#define %s_OFF_%-16s 0x%x /* %u */\n",
			 b, $4, offset, offset);
    defbase[ndef] = b;
    ndef++;
  }

  if ($1 != "alias")
    cur_offset += type_sizes[$2];
}

END	{
  printf("#ifndef __PROC_OFFSETS_H__\n");	
  printf("#define __PROC_OFFSETS_H__\n\n");	

  printf("/* This file is automatically generated and is hereby\n");
  printf("   placed in the public domain */\n\n");

  for (b in bases) {
    for (i = 0; i < ndef; i++) {
      if (defbase[i] == b)
	printf("%s", defs[i]);
    }
    printf("\n");
  }

  printf("\n#endif /* __PROC_OFFSETS_H__ */\n");	
}

