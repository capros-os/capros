#
# Copyright (C) 2000, Jonathan S. Shapiro.
#
# This file is part of the EROS Operating System.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2,
# or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#

# program to generate ArchDescrip stuff for EROSIMG library.
# Note that this version handles only one architecture, which
# is something we really should fix someday.

BEGIN {
  nPrimary = 0;
  nMisc = 0;
  nDomain = 0;
}

/^primary/	{
  primary[nPrimary] = $2;
  bindto[$2] = $2;
  publish_kt[$2] = 1;
  publish_akt[$2] = 1;
  akt_value[$2] = nPrimary;
  ktclass[$2] = "primary";
  nPrimary++;
};

/^reserved/ {
  publish_kt[$2] = 0;
  publish_akt[$2] = 0;
  ktclass[$2] = "reserved";
  bindto[$2] = "Unimplemented";
}

/^obsolete/ {
  ktclass[$2] = "obsolete";
  bindto[$2] = "Unimplemented";
}

/^bindto/ {
  bindto[$2] = $3;
}

/^noakt/	{
  publish_akt[$2] = 0;
};

/^akt/ {
  akt_value[$2] = strtonum($3);
}

/^domain/	{
  domain[nDomain] = $2;
  publish_kt[$2] = 1;
  akt_value[$2] = nDomain + 65536;
  nDomain++;
};

END	{
  printf("#ifndef __STDKEYTYPE_H__\n");
  printf("#define __STDKEYTYPE_H__\n");

  printf("/* This file is automatically generated and is hereby\n");
  printf("   placed in the public domain */\n\n");

  printf("#if defined(_REVEAL_KERNEL_KEY_TYPES_) || defined(__KERNEL__)\n\n");

  for (i = 0; i < nPrimary; i++) {
    if (publish_kt[primary[i]])
      printf("#define  KKT_%-20s %d   /* %s key (primary) */\n",
	     primary[i], i, primary[i]);
    else
      printf("#undef   KKT_%-20s /* %d %s key (%s primary) */\n",
	     primary[i], i, primary[i], ktclass[primary[i]]);
  }
  printf("#define KKT_NUM_KEYTYPE %d\n\n", i);

  printf("#endif /* _REVEAL_KERNEL_KEY_TYPES_ || __KERNEL__ */\n\n");

  for (i = 0; i < nPrimary; i++) {
    if (publish_akt[primary[i]]) {
      printf("#define  AKT_%-20s 0x%x  /* %s key (primary) */\n",
	     primary[i], akt_value[primary[i]], primary[i]);
    }
  }

  printf("\n/* Standard domains: */\n\n");

  for (i = 0; i < nDomain; i++) {
    printf("#define  AKT_%-20s %d   /* %s key (domain) */\n",
	   domain[i], akt_value[domain[i]], domain[i]);
  }
  printf("\n");

  printf("#endif /* __STDKEYTYPE_H__ */\n\n");
  printf("/* Lines below are intentionally multiply includable. They are\n");
  printf("   provided for use by applications that may need to perform\n");
  printf("   per-keytype declarations. */\n\n");
  printf("#ifndef __EROS_PRIMARY_KEYDEF\n");
  printf("#define __EROS_PRIMARY_KEYDEF(name,valid,bindto)\n");
  printf("#endif  /* __EROS_PRIMARY_KEYDEF */\n\n");

  printf("#ifndef __EROS_MISC_KEYDEF\n");
  printf("#define __EROS_MISC_KEYDEF(name,valid)\n");
  printf("#endif  /* __EROS_MISC_KEYDEF */\n\n");
  
  printf("#ifndef __EROS_DOMAIN_KEYDEF\n");
  printf("#define __EROS_DOMAIN_KEYDEF(name,valid)\n");
  printf("#endif  /* __EROS_DOMAIN_KEYDEF */\n\n");
  
  for (i = 0; i < nPrimary; i++) {
    printf("__EROS_PRIMARY_KEYDEF(%s, %d, %s)\n", primary[i], 
	   publish_kt[primary[i]], bindto[primary[i]]);
  }

  printf("\n");

  for (i = 0; i < nMisc; i++) {
    printf("__EROS_MISC_KEYDEF(%s, %d)\n", misc[i], publish_kt[misc[i]]);
  }

  printf("\n");

  for (i = 0; i < nDomain; i++) {
    printf("__EROS_DOMAIN_KEYDEF(%s, %d)\n", domain[i], publish_kt[domain[i]]);
  }

  printf("#undef __EROS_PRIMARY_KEYDEF\n");
  printf("#undef __EROS_MISC_KEYDEF\n");
  printf("#undef __EROS_DOMAIN_KEYDEF\n");
}

